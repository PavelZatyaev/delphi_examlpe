пример архитектурного решения:
fuBaseForm.pas
суть задачи: Обеспечение оперативного изменения прав доступа пользователя к данным и элементам интерфейса без изменения исходного кода, сохранение совместимости с существующей системой прав (роли oracle).

пример специализированного прикладного решения:
fuRwWagonDislocationEx.pas
суть задачи: обеспечить непрерывный хронологический учет перемещения вагонов с точностью до позиции в составе.
решение "по живому" - до постановки задачи этот интерфейс уже был в работе, но фактически не работал, т.к. было много ошибок ввиду неправильного решения задачи учета.
пришлось сохранить внешний вид (требование заказчика), но заменить почти весь код.
Тем не менее результат можно рассматривать как пример "говнокода": хотя объем кода был уменьшен раза в два от исходного при кратном увеличении функциональности, сам код далек от оптимального т.к. 1) исходно были заложены неправильные принципы постороения и 2) переписывался код в условиях непрерывной эксплуатации (что-то там всё-таки работало).
Основной код, обеспечивающий учет реализован на pl\sql.

пример прикладного решения общего характера:
fuStructEdit.pas
суть задачи: хранение информации в структурированном виде.
С одной стороны - обычный древовидный справочник, с другой - в основе системы храненения сушествующий в инф. системе механизм реплицируемых справочников, имеющих свои интерфейсы, настройки, права.
Но существующие справочники обеспечивают только плоское представление данных, что в ряде задач создает проблемы по хранению данных по объектам, содержащим разные (логически,физически и тп) свойства.
